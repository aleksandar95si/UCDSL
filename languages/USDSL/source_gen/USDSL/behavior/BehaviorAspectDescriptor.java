package USDSL.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myActor__BehaviorDescriptor = new Actor__BehaviorDescriptor();
  private final BHDescriptor myUseCase__BehaviorDescriptor = new UseCase__BehaviorDescriptor();
  private final BHDescriptor myACSO__BehaviorDescriptor = new ACSO__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myACSO__BehaviorDescriptor;
      case 1:
        return myActor__BehaviorDescriptor;
      case 2:
        return myUseCase__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x810c97e7e104dadL, 0x97d97fc9c6808e25L, 0x6ae5bdeae415fd0dL), MetaIdFactory.conceptId(0x810c97e7e104dadL, 0x97d97fc9c6808e25L, 0x1d63b1ce58ec0671L), MetaIdFactory.conceptId(0x810c97e7e104dadL, 0x97d97fc9c6808e25L, 0x545fb3f5d61c1e40L)).seal();
}
