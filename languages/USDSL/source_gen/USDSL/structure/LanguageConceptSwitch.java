package USDSL.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int ACSO = 0;
  public static final int ANSO = 1;
  public static final int APISO = 2;
  public static final int AbstractAction = 3;
  public static final int ActionField = 4;
  public static final int Actor = 5;
  public static final int DomainEntity = 6;
  public static final int DomainModel = 7;
  public static final int FinalState = 8;
  public static final int OA = 9;
  public static final int OutState = 10;
  public static final int PropertyDefinedByActor = 11;
  public static final int PropertyDefinedBySystem = 12;
  public static final int PropertyInAction = 13;
  public static final int PropertyListMachine = 14;
  public static final int SO = 15;
  public static final int StartState = 16;
  public static final int StateMachine = 17;
  public static final int StateRef = 18;
  public static final int SystemModel = 19;
  public static final int Transition = 20;
  public static final int TransitionRef = 21;
  public static final int TransitonState = 22;
  public static final int UseCase = 23;
  public static final int UseCaseDefinition = 24;
  public static final int UseCaseMachine = 25;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x810c97e7e104dadL, 0x97d97fc9c6808e25L);
    builder.put(0x6ae5bdeae415fd0dL, ACSO);
    builder.put(0x6ae5bdeae420bad3L, ANSO);
    builder.put(0x6ae5bdeae420bad4L, APISO);
    builder.put(0x545fb3f5d61f5ee2L, AbstractAction);
    builder.put(0x6ae5bdeae41a19c6L, ActionField);
    builder.put(0x1d63b1ce58ec0671L, Actor);
    builder.put(0x4ee0561cc13c289eL, DomainEntity);
    builder.put(0x4ee0561cc13b6a88L, DomainModel);
    builder.put(0x4ee0561cc1403c71L, FinalState);
    builder.put(0x6ae5bdeae420bad2L, OA);
    builder.put(0x4ee0561cc1430b12L, OutState);
    builder.put(0x545fb3f5d622ef75L, PropertyDefinedByActor);
    builder.put(0x22f9cd4eee9cfaa7L, PropertyDefinedBySystem);
    builder.put(0x545fb3f5d623b042L, PropertyInAction);
    builder.put(0x545fb3f5d62497b2L, PropertyListMachine);
    builder.put(0x6ae5bdeae415fd0eL, SO);
    builder.put(0x4ee0561cc1407deeL, StartState);
    builder.put(0x4ee0561cc13d15dcL, StateMachine);
    builder.put(0x4ee0561cc13fcbacL, StateRef);
    builder.put(0x4ee0561cc13b6a8bL, SystemModel);
    builder.put(0x4ee0561cc141a838L, Transition);
    builder.put(0x6dbb24f8fbc9ee0eL, TransitionRef);
    builder.put(0x4ee0561cc142a9b6L, TransitonState);
    builder.put(0x545fb3f5d61c1e40L, UseCase);
    builder.put(0x4ee0561cc13d5edeL, UseCaseDefinition);
    builder.put(0x545fb3f5d61c1e3dL, UseCaseMachine);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
